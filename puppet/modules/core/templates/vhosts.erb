NameVirtualHost *:<%= @forwarded_port %>
NameVirtualHost *:443
Listen 8000

<VirtualHost *:443>
    SSLEngine on
    SSLCertificateFile /etc/pki/tls/certs/<%= @secure_fqdn %>.crt
    SSLCertificateKeyFile /etc/pki/tls/private/<%= @secure_fqdn %>.key

    ServerName   <%= @secure_fqdn %>
    ServerAlias   <%= @secure_fqdn %>
    DocumentRoot "<%= @document_root %>"

    LogLevel     notice
    CustomLog    "<%= @base_path %>/logs/access_secure.log" combined
    ErrorLog     "<%= @base_path %>/logs/error_secure.log"
    RewriteLog   "<%= @base_path %>/logs/rewrite_secure.log"
    RewriteLogLevel <%= ( has_variable?("RewriteLogLevel") ? @RewriteLogLevel : 0 ) %>

    <Directory <%= @document_root %>>
        Options FollowSymLinks
        AllowOverride All
    </Directory>

</VirtualHost>

<VirtualHost *:<%= @forwarded_port %>>
    ServerName   <%= @fqdn %>
    ServerAlias  <%= @fqdn %>
    DocumentRoot "<%= @document_root %>"

    LogLevel     notice
    CustomLog    "<%= @base_path %>/logs/access.log" combined
    ErrorLog     "<%= @base_path %>/logs/error.log"
    RewriteLog   "<%= @base_path %>/logs/rewrite.log"
    RewriteLogLevel <%= ( has_variable?("RewriteLogLevel") ? @RewriteLogLevel : 0 ) %>

    <Directory <%= @document_root %>>
        Options FollowSymLinks
        AllowOverride All
    </Directory>

    RewriteEngine On
    #---------- SIMPLE 301 REDIRECTS MAPPING (GO-REDIRECTS, ETC) ----------------------------
    RewriteMap  goredirectsmap txt:<%= @content_path %>/common/goredirects.txt
    RewriteCond ${goredirectsmap:$1|NOT_FOUND} !NOT_FOUND
    RewriteRule ^(.*)$ ${goredirectsmap:$1} [L,R=301]

</VirtualHost>

<% unless @assets_fqdn.nil? -%>
<VirtualHost *:<%= @forwarded_port %>>
    ServerName   <%= @assets_fqdn %>
    ServerAlias  <%= @assets_fqdn %>
    DocumentRoot "<%= @document_root %>/wp-content/assets"

    LogLevel     notice
    CustomLog    "<%= @base_path %>/logs/access.log" combined
    ErrorLog     "<%= @base_path %>/logs/error.log"
    RewriteLog   "<%= @base_path %>/logs/rewrite.log"
    RewriteLogLevel <%= ( has_variable?("RewriteLogLevel") ? @RewriteLogLevel : 0 ) %>

    <Directory <%= @document_root %>>
        Options FollowSymLinks
        AllowOverride All
    </Directory>
</VirtualHost>
<% end -%>

<% unless @additional_subdomains.nil? -%>
<% @additional_subdomains.split(',').each do |additional_subdomain| -%>
<VirtualHost *:<%= @forwarded_port %>>
    ServerName   <%= additional_subdomain %>.<%= @fqdn %>
    ServerAlias  <%= additional_subdomain %>.<%= @fqdn %>
    DocumentRoot "<%= has_variable?("additional_subdomain_folder") ? @additional_subdomain_folder : @base_path + '/' + additional_subdomain %>"

    LogLevel     notice
    CustomLog    "<%= @base_path %>/logs/access_<%= additional_subdomain %>.log" combined
    ErrorLog     "<%= @base_path %>/logs/error_<%= additional_subdomain %>.log"
    RewriteLog   "<%= @base_path %>/logs/rewrite_<%= additional_subdomain %>.log"
    RewriteLogLevel <%= ( has_variable?("RewriteLogLevel") ? @RewriteLogLevel : 0 ) %>

    <Directory <%= @base_path %>/<%= additional_subdomain %>>
        Options FollowSymLinks
        AllowOverride All
    </Directory>
</VirtualHost>
<% end -%>
<% end -%>

<%# memcache admin   %>
<VirtualHost *:8000>
    ServerName   <%= @fqdn %>
    ServerAlias  <%= @fqdn %>
    DocumentRoot "<%= @base_path %>/memcached-admin"

    LogLevel     notice
    CustomLog    "<%= @base_path %>/logs/memcach-admin-access.log" combined
    ErrorLog     "<%= @base_path %>/logs/memcach-admin-error.log"
    RewriteLog   "<%= @base_path %>/logs/memcach-admin-rewrite.log"
    RewriteLogLevel <%= ( has_variable?("RewriteLogLevel") ? @RewriteLogLevel : 0 ) %>

    <Directory <%= @document_root %>>
        Options FollowSymLinks
        AllowOverride All
    </Directory>

    RewriteEngine On

</VirtualHost>
